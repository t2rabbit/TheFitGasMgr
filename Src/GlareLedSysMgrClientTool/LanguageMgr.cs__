using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Xml;
using System.Data;
using System.Collections;
using System.Windows.Forms;
using System.IO;

namespace Property
{

    class LangItem
    {
        public string strTxt;
        public string strVal;
    }

    class LanguageMgr
    {
        //读取默认语言
        public static string ReadDefaultLanguage()
        {
            XmlReader reader = new XmlTextReader("DefLanguage.xml");
            XmlDocument doc = new XmlDocument();
            doc.Load(reader);
            XmlNode root = doc.DocumentElement;
            //选取DefaultLangugae节点
            XmlNode node = root.SelectSingleNode("/Setting/Def");

            string result = "EN";
            //取出节点中的内容
            if (node != null) 
            {
                result = node.InnerText;
            }

            reader.Close();
            return result;
        }


        //修改默认语言
        public static void WriteDefaultLanguage(string lang)
        {
            DataSet ds = new DataSet();
            ds.ReadXml("DefLanguage.xml");
            DataTable dt = ds.Tables["Setting"];

            dt.Rows[0]["Def"] = lang;
            ds.AcceptChanges();
            ds.WriteXml("DefLanguage.xml");
        }

        static public List<LangItem> ReadLangages()
        {
            XmlReader reader = new XmlTextReader("DefLanguage.xml");
            XmlDocument doc = new XmlDocument();
            doc.Load(reader);
            XmlNode root = doc.DocumentElement;
            //选取DefaultLangugae节点

            List<LangItem> lstStr = new List<LangItem>();

            XmlNodeList node = root.SelectNodes("/Setting/Language/Item");
            int a = node.Count;
            foreach (XmlNode aNode in node)
            {
                LangItem aItem = new LangItem();
                aItem.strTxt = aNode.Attributes["text"].Value.ToString();
                aItem.strVal = aNode.Attributes["val"].Value.ToString();
                lstStr.Add(aItem);
            }

            reader.Close();

            return lstStr;
        }


        /// ＜summary＞
        /// 读取多语言的资源文件
        /// ＜/summary＞
        /// ＜param name="frmName"＞窗体的Name＜/param＞
        /// ＜param name="lang"＞要显示的语言(如ZH或EN)＜/param＞
        /// ＜returns＞＜/returns＞
        public static Hashtable ReadResourceKey(string lang)
        {
            Hashtable result = new Hashtable();

            XmlReader reader = null;
            FileInfo fi = new FileInfo("language_" + lang + ".xml");
            if (!fi.Exists)
                reader = new XmlTextReader("languagedef.xml");
            else
                reader = new XmlTextReader("language_" + lang + ".xml");

            XmlDocument doc = new XmlDocument();
            doc.Load(reader);

            XmlNode root = doc.DocumentElement;
            XmlNodeList nodelist = root.SelectNodes("strings/item");
            foreach (XmlNode node in nodelist)
            {
                try
                {
                    XmlNode node1 = node.SelectSingleNode("@key");
                    XmlNode node2 = node.SelectSingleNode("@value");
                    if (node1 != null)
                    {
                        result.Add(node1.InnerText.ToLower(), node2.InnerText);
                    }
                }
                catch (FormatException fe)
                {
                    Console.WriteLine(fe.ToString());
                }
            }
            reader.Close();
            return result;
        }


        /// ＜summary＞
        /// 读取多语言的资源文件
        /// ＜/summary＞
        /// ＜param name="frmName"＞窗体的Name＜/param＞
        /// ＜param name="lang"＞要显示的语言(如ZH或EN)＜/param＞
        /// ＜returns＞＜/returns＞
        public static Hashtable ReadResource(string frmName, string lang)
        {
            Hashtable result = new Hashtable();

            XmlReader reader = null;
            FileInfo fi = new FileInfo("language_" + lang + ".xml");
            if (!fi.Exists)
                reader = new XmlTextReader("languagedef.xml");
            else
                reader = new XmlTextReader("language_" + lang + ".xml");

            XmlDocument doc = new XmlDocument();
            doc.Load(reader);

            XmlNode root = doc.DocumentElement;
            XmlNodeList nodelist = root.SelectNodes("Form[Name='" + frmName + "']/Controls/Control");
            foreach (XmlNode node in nodelist)
            {
                try
                {
                    XmlNode node1 = node.SelectSingleNode("@name");
                    XmlNode node2 = node.SelectSingleNode("@text");
                    if (node1 != null)
                    {
                        result.Add(node1.InnerText.ToLower(), node2.InnerText);
                    }
                }
                catch (FormatException fe)
                {
                    Console.WriteLine(fe.ToString());
                }
            }
            reader.Close();
            return result;
        }

        /// ＜summary＞
        /// 获取控件的名称
        /// ＜/summary＞
        /// ＜param name="form"＞＜/param＞
        public static void getNames(Form form)
        {
            //根据用户选择的语言获得表的显示文字
            Hashtable table = ReadResource(form.Name, ReadDefaultLanguage());
            Control.ControlCollection controlNames = form.Controls;
            try
            {

                foreach (Control control in controlNames)
                {
                    if (control.GetType() == typeof(System.Windows.Forms.Panel))
                        GetSubControls(control.Controls, table);

                    if (control.GetType() == typeof(System.Windows.Forms.GroupBox))
                        GetSubControls(control.Controls, table);

                    if (control.GetType() == typeof(System.Windows.Forms.MenuStrip))
                        GetSubControls(control.Controls, table);

                    if (control.GetType() == typeof(System.Windows.Forms.TabControl))
                        GetSubControls(control.Controls, table);
                    if (control.GetType() == typeof(System.Windows.Forms.TabPage))
                        GetSubControls(control.Controls, table);


                    if (table.Contains(control.Name.ToLower()))
                        control.Text = (string)table[control.Name.ToLower()];
                }
                if (table.Contains(form.Name.ToLower()))
                    form.Text = (string)table[form.Name.ToLower()];
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex.ToString());
            }
        }



        /// ＜summary＞
        /// 获得子控件的显示名
        /// ＜/summary＞
        /// ＜param name="controls"＞＜/param＞
        /// ＜param name="table"＞＜/param＞
        private static void GetSubControls(Control.ControlCollection controls, Hashtable table)
        {
            foreach (Control control in controls)
            {
                if (control.GetType() == typeof(System.Windows.Forms.Panel))
                    GetSubControls(control.Controls, table);

                if (control.GetType() == typeof(System.Windows.Forms.GroupBox))
                    GetSubControls(control.Controls, table);

                if (control.GetType() == typeof(System.Windows.Forms.TabControl))
                    GetSubControls(control.Controls, table);
                if (control.GetType() == typeof(System.Windows.Forms.TabPage))
                    GetSubControls(control.Controls, table);

                if (table.Contains(control.Name.ToLower()))
                    control.Text = (string)table[control.Name.ToLower()];
            }
        }



        /// ＜summary＞
        /// 获取控件的名称
        /// ＜/summary＞
        /// ＜param name="form"＞＜/param＞
        public static void getNames(MenuStrip ms)
        {
            //根据用户选择的语言获得表的显示文字
            Hashtable table = ReadResource(ms.Name, ReadDefaultLanguage());
            ToolStripItemCollection msitems = ms.Items;

            try
            {
                foreach (ToolStripMenuItem item in msitems)
                {
                    if (table.Contains(item.Name.ToLower()))
                        item.Text = (string)table[item.Name.ToLower()];

                    ToolStripItemCollection subItems = item.DropDownItems;
                    GetSubMenuItems(subItems, table);

                }
                if (table.Contains(ms.Name.ToLower()))
                    ms.Text = (string)table[ms.Name.ToLower()];
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex.ToString());
            }
        }



        /// ＜summary＞
        /// 获取控件的名称
        /// ＜/summary＞
        /// ＜param name="form"＞＜/param＞
        public static void getNames(ContextMenuStrip ms)
        {
            //根据用户选择的语言获得表的显示文字
            Hashtable table = ReadResource(ms.Name, ReadDefaultLanguage());
            ToolStripItemCollection msitems = ms.Items;

            try
            {
                foreach (ToolStripMenuItem item in msitems)
                {
                    if (table.Contains(item.Name.ToLower()))
                        item.Text = (string)table[item.Name.ToLower()];

                    ToolStripItemCollection subItems = item.DropDownItems;
                    GetSubMenuItems(subItems, table);

                }
                if (table.Contains(ms.Name.ToLower()))
                    ms.Text = (string)table[ms.Name.ToLower()];
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex.ToString());
            }
        }


        public static void GetSubMenuItems(ToolStripItemCollection ts, Hashtable table)
        {
            foreach (ToolStripMenuItem item in ts)
            {
                if (table.Contains(item.Name.ToLower()))
                    item.Text = (string)table[item.Name.ToLower()];

                ToolStripItemCollection subItems = item.DropDownItems;
                GetSubMenuItems(subItems, table);
            }
        }


        public static string GetKey(string strKey)
        {
            //根据用户选择的语言获得表的显示文字
            Hashtable table = ReadResourceKey(ReadDefaultLanguage());

            try
            {
                if (table.Contains(strKey.ToLower()))
                    return (string)table[strKey.ToLower()];
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex.ToString());
            }

            return "x?X";
        }
    
    }
}
